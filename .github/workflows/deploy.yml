name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker environment on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            whoami
            if [ -d "/root/monitoring" ]; then
              docker-compose -f /root/monitoring/docker-compose.yml down
              rm -rf /root/monitoring
            fi
            sudo apt-get update && sudo apt-get install -y git
            git clone https://github.com/dongtranthien/docker-telegraf-grafana-monitoring.git /root/monitoring
            cd /root/monitoring
            docker-compose up -d
            sleep 5

      - name: Configure InfluxDB on remote server
        id: configure-influxdb
        env:
          INFLUXDB_USER_NAME: ${{ secrets.INFLUXDB_USER_NAME }}
          INFLUXDB_PASSWORD: ${{ secrets.INFLUXDB_PASSWORD }}
          INFLUXDB_ORGANIZATION: ${{ secrets.INFLUXDB_ORGANIZATION }}
          INFLUXDB_BUCKET: ${{ secrets.INFLUXDB_BUCKET }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: INFLUXDB_USER_NAME, INFLUXDB_PASSWORD, INFLUXDB_ORGANIZATION, INFLUXDB_BUCKET
          script: |
            result=$(curl --location 'http://0.0.0.0:8086/api/v2/setup' \
              --header 'Accept: */*' \
              --header 'Accept-Language: en-US,en;q=0.9,vi-VN;q=0.8,vi;q=0.7' \
              --header 'Connection: keep-alive' \
              --header 'Origin: http://0.0.0.0:8086' \
              --header 'Referer: http://0.0.0.0:8086/onboarding/1' \
              --header 'content-type: application/json' \
              --data '{"username":"'"$INFLUXDB_USER_NAME"'","password":"'"$INFLUXDB_PASSWORD"'","org":"'"$INFLUXDB_ORGANIZATION"'","bucket":"'"$INFLUXDB_BUCKET"'"}')
            token=$(echo "$result" | jq -r '.auth.token')

            influxdb_config=$(cat <<-END
              [[inputs.cpu]]
                percpu = true
                totalcpu = true
                collect_cpu_time = false
                report_active = false

              [[inputs.mem]]

              [[outputs.influxdb_v2]]
                urls = ["http://influxdb:8086"]
                token = "$token"
                organization = "$INFLUXDB_ORGANIZATION"
                bucket = "$INFLUXDB_BUCKET"
            END
            )

            rm -rf /root/monitoring/telegraf.conf
            echo "$influxdb_config" > /root/monitoring/telegraf.conf

            serviceAccountResult=$(curl -X POST -H "Content-Type: application/json" -d '{"name":"test", "role": "Admin"}' http://admin:admin@localhost:3000/api/serviceaccounts)
            serviceAccountId=$(echo "$serviceAccountResult" | jq -r '.id')
            echo $serviceAccountId
            echo "http://admin:admin@localhost:3000/api/serviceaccounts/'"$serviceAccountId"'/tokens"
            tokenResult=$(curl -X POST -H "Content-Type: application/json" -d '{"name":"test-token"}' http://admin:admin@localhost:3000/api/serviceaccounts/'"$serviceAccountId"'/tokens)
            echo $tokenResult

      - name: Restart Telegraf container on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_NAME }}
          username: ${{ secrets.SSH_USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /root/monitoring
            docker restart telegraf-monitoring
